import{_ as e,c as a,o,a3 as n}from"./chunks/framework.BRYRxafc.js";const t="/assets/1.Bvs4MeFG.png",s="/assets/2.BXEdMI64.png",p="/assets/3.C_HqJmd5.png",q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"sidebar/development/nvm.md","filePath":"sidebar/development/nvm.md"}'),r={name:"sidebar/development/nvm.md"},l=n('<h3 id="nvm-介绍、nvm-下载、nvm-安装、配置及-nvm-使用" tabindex="-1">nvm 介绍、nvm 下载、nvm 安装、配置及 nvm 使用 <a class="header-anchor" href="#nvm-介绍、nvm-下载、nvm-安装、配置及-nvm-使用" aria-label="Permalink to &quot;nvm 介绍、nvm 下载、nvm 安装、配置及 nvm 使用&quot;">​</a></h3><p>在工作中，我们可能同时在进行 2 个或者多个 <strong>不同的</strong> 项目开发，每个项目的需求不同，进而不同项目必须依赖不同版本的 NodeJS 运行环境，这种情况下，对于维护多个版本的 node 将会是一件非常麻烦的事情，nvm 就是为解决这个问题而产生的，他可以方便的在同一台设备上进行多个 node 版本之间切换。</p><h2 id="_1、nvm-介绍" tabindex="-1">1、nvm 介绍 <a class="header-anchor" href="#_1、nvm-介绍" aria-label="Permalink to &quot;1、nvm 介绍&quot;">​</a></h2><p>Node Version Manager（NVM） 是一种用于管理多个主动节点.js 版本的工具。</p><p>Node.js 平台，Node.js 工具社区和 Node.js 库是快速移动的目标 - 在一个 Node.js 版本下可能有效的方法不能保证适用于另一个版本的 Node.js。因此，用户需要一些方法在 Node 的多个版本之间切换.js</p><h2 id="为什么使用-nvm" tabindex="-1">为什么使用 NVM？ <a class="header-anchor" href="#为什么使用-nvm" aria-label="Permalink to &quot;为什么使用 NVM？&quot;">​</a></h2><p>NVM 允许用户：</p><ul><li>使用简单的命令在本地下载任何远程长期支持 （LTS） 版本的 Node.js。</li><li>直接从命令行在 Node.js 的多个版本之间轻松切换。</li><li>设置别名以轻松在不同下载版本的 Node.js 之间切换。</li></ul><h2 id="_2、下载" tabindex="-1">2、下载 <a class="header-anchor" href="#_2、下载" aria-label="Permalink to &quot;2、下载&quot;">​</a></h2><h3 id="操作系统支持" tabindex="-1">操作系统支持 <a class="header-anchor" href="#操作系统支持" aria-label="Permalink to &quot;操作系统支持&quot;">​</a></h3><p>nvm 同时支持 Linux 和 macOS</p><p>我们这里是在 Windows 上操作</p><p>下载链接：<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noreferrer">https://github.com/coreybutler/nvm-windows/releases</a></p><h2 id="_3、安装" tabindex="-1">3、安装： <a class="header-anchor" href="#_3、安装" aria-label="Permalink to &quot;3、安装：&quot;">​</a></h2><p>如果电脑上之前已经单独安装了 node，先卸载（可以在控制面板里面卸载），然后再安装 nvm</p><p>傻瓜式一直点击下一步即可安装。</p><p>安装完成后，可以打开 cmd 命令行窗口。执行</p><blockquote><p>nvm -v</p></blockquote><p>就可以看见 nvm 的版本号啦！</p><h2 id="_4、使用" tabindex="-1">4、使用： <a class="header-anchor" href="#_4、使用" aria-label="Permalink to &quot;4、使用：&quot;">​</a></h2><blockquote><p>nvm ls // 查显示可以安装的所有 node.js 的版本</p></blockquote><blockquote><p>nvm list available // 查显示可以安装的所有 node.js 的版本</p></blockquote><p><img src="'+t+'" alt="1.png"></p><p>可以在可选列表里。选择任意版本安装，比如安装 16.15.0</p><p>执行：</p><blockquote><p>nvm install 16.15.0</p></blockquote><p>安装好了之后。可以执行：</p><blockquote><p>nvm ls</p></blockquote><p>可以在列表里看到这个版本：</p><p><img src="'+s+'" alt="2.png"></p><p>如果想使用 16.15.0 这个版本的话。就执行：</p><blockquote><p>nvm use 16.15.0</p></blockquote><p>然后执行：</p><blockquote><p>node -v</p></blockquote><p>就可以看到当前版本已经是 16.15.0 了</p><p><img src="'+p+'" alt="3.png"></p>',36),m=[l];function i(d,c,v,h,_,u){return o(),a("div",null,m)}const k=e(r,[["render",i]]);export{q as __pageData,k as default};
